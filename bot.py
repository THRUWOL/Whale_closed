'''
Python bot for Discord
last update: 15 may 2020

by Nikita [thruwol] Yarosh
'''
import discord
import os
from discord import utils
from discord.ext import commands
from discord.utils import get

# —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ discord
client = discord.Client()

# –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç—É
bot = commands.Bot(command_prefix='.')

# –≤–∑—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å —Å–ø–µ—Ü. —Å–µ—Ä–≤–∏—Å–∞
token = os.environ.get('BOT_TOKEN')
# id –ø–æ—Å—Ç–∞ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ä–µ–∞–∫—Ü–∏–∏
post_id = 0
# —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏
roles = {
    'üî•': 689539742173626415, #cyber wayfarer
    'ü§ê': 691722998746578985, #secret programmer
    'üí©': 709863925029798060 #face
}
# –∏—Å–∫–ª—é—á–µ–Ω–∏—è
excroles = ()
# –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–æ–ª–µ–π –¥–ª—è 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
max_roles_per_ser = 2

class MyClient(discord.Client):
    async def on_ready(self):
        print('Logged on as {0}!'.format(self.user))

    async def on_raw_reaction_add(self, payload):
        if payload.message_id == config.POST_ID:
            channel = self.get_channel(payload.channel_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
            message = await channel.fetch_message(payload.message_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            member = utils.get(message.guild.members, id=payload.user_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é

            try:
                emoji = str(payload.emoji) # —ç–º–æ–¥–∂–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª —é–∑–µ—Ä
                role = utils.get(message.guild.roles, id=config.ROLES[emoji]) # –æ–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)

                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))

            except KeyError as e:
                print('[ERROR] KeyError, no role found for ' + emoji)
            except Exception as e:
                print(repr(e))

    async def on_raw_reaction_remove(self, payload):
        channel = self.get_channel(payload.channel_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
        message = await channel.fetch_message(payload.message_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        member = utils.get(message.guild.members, id=payload.user_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é

        try:
            emoji = str(payload.emoji) # —ç–º–æ–¥–∂–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª —é–∑–µ—Ä
            role = utils.get(message.guild.roles, id=config.ROLES[emoji]) # –æ–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)

            await member.remove_roles(role)
            print('[SUCCESS] Role {1.name} has been remove for user {0.display_name}'.format(member, role))

        except KeyError as e:
            print('[ERROR] KeyError, no role found for ' + emoji)
        except Exception as e:
            print(repr(e))

# RUN
client = MyClient()
client.run(config.TOKEN)import discord
from discord import utils

import config

class MyClient(discord.Client):
    async def on_ready(self):
        print('Logged on as {0}!'.format(self.user))

    async def on_raw_reaction_add(self, payload):
        if payload.message_id == config.POST_ID:
            channel = self.get_channel(payload.channel_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
            message = await channel.fetch_message(payload.message_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            member = utils.get(message.guild.members, id=payload.user_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é

            try:
                emoji = str(payload.emoji) # —ç–º–æ–¥–∂–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª —é–∑–µ—Ä
                role = utils.get(message.guild.roles, id=config.ROLES[emoji]) # –æ–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)

                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))

            except KeyError as e:
                print('[ERROR] KeyError, no role found for ' + emoji)
            except Exception as e:
                print(repr(e))

    async def on_raw_reaction_remove(self, payload):
        channel = self.get_channel(payload.channel_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
        message = await channel.fetch_message(payload.message_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        member = utils.get(message.guild.members, id=payload.user_id) # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é

        try:
            emoji = str(payload.emoji) # —ç–º–æ–¥–∂–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª —é–∑–µ—Ä
            role = utils.get(message.guild.roles, id=config.ROLES[emoji]) # –æ–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–ª–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)

            await member.remove_roles(role)
            print('[SUCCESS] Role {1.name} has been remove for user {0.display_name}'.format(member, role))

        except KeyError as e:
            print('[ERROR] KeyError, no role found for ' + emoji)
        except Exception as e:
            print(repr(e))

# RUN
client = MyClient()
client.run(token)
